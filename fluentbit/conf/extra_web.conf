# =============================================================
# ** FluentBitコンフィグ **
#
# 前提）
# コンテナ名にApacheなら「apache」Tomcatなら「tomcat」が含まれていること。
# アプリケーションのログ種別は半角スペース区切りの4番目のフィールドに存在。
# 変数はすべてECS環境変数で指定。
# FluentBit自身が出力するログのログレベルは環境変数FLB_LOG_LEVELで指定。
#
# =============================================================
# -------------------------------------------------------------
# SERVICE
# -------------------------------------------------------------
[SERVICE]
    Flush              1
    Grace              30
    Parsers_File       /fluent-bit/parsers.conf

# -------------------------------------------------------------
# FILTER
# -------------------------------------------------------------
# ALBヘルスチェックログを除外
[FILTER]
    Name               grep
    Match              *-firelens-*
    Exclude            log ^(?=.*ELB-HealthChecker\/2\.0).*$

# スタックトレース マルチラインでログを結合
[FILTER]
    Name               multiline
    Match              *tomcat*-firelens-*
    Match              *-firelens-*
    multiline.key_content log
    multiline.parser   stacktrace

# スタックトレース 結合したログをマッチング
[FILTER]
    Name               rewrite_tag
    Match              *tomcat*-firelens-*
    Match              *-firelens-*
    Rule               $log "^\d{4}-\d{2}-\d{2}[ ]\d{2}:\d{2}:\d{2},\d{3}(.+?(Fatal|Error|Exception|Throwable|Fail|Warning).+?)\s+?at[ ]" app-stacktrace-$container_id false

# トランザクションログ
[FILTER]
    Name               rewrite_tag
    Match              *tomcat*-firelens-*
    Rule               $log "^(?:\S+?[ ]){3}txn[ ]" app-txn-$container_id false

# インターフェースログ
[FILTER]
    Name               rewrite_tag
    Match              *tomcat*-firelens-*
    Rule               $log "^(?:\S+?[ ]){3}if[ ]" app-if-$container_id false

# -------------------------------------------------------------
# OUTPUT
# -------------------------------------------------------------
# スタックトレース Tomcatログとして扱う
[OUTPUT]
    Name               cloudwatch_logs
    Match              app-stacktrace-*
    region             ${AWS_REGION}
    log_group_name     ${LOGGROUP_TOMCAT_STDERR}
    log_stream_prefix  ${SERVICE_NAME}-
    auto_create_group  true
    log_key            log

# トランザクションログ
[OUTPUT]
    Name               cloudwatch_logs
    Match              app-txn-*
    region             ${AWS_REGION}
    log_group_name     ${LOGGROUP_APP_TXN}
    log_stream_prefix  ${SERVICE_NAME}-
    auto_create_group  true
    log_key            log

# インターフェースログ
[OUTPUT]
    Name               cloudwatch_logs
    Match              app-if-*
    region             ${AWS_REGION}
    log_group_name     ${LOGGROUP_APP_IF}
    log_stream_prefix  ${SERVICE_NAME}-
    auto_create_group  true
    log_key            log

# Push通知メッセージ取得ログ
[OUTPUT]
    Name               cloudwatch_logs
    Match              app-msg-*
    region             ${AWS_REGION}
    log_group_name     ${LOGGROUP_APP_MSG}
    log_stream_prefix  ${SERVICE_NAME}-
    auto_create_group  true
    log_key            log

# Tomcatミドルウェア全ログ
[OUTPUT]
    Name               cloudwatch_logs
    Match              *tomcat*-firelens-*
    region             ${AWS_REGION}
    log_group_name     ${LOGGROUP_MW_TOMCAT_ALL}
    log_stream_prefix  ${SERVICE_NAME}-
    auto_create_group  true
    log_key            log

# すべてのFILTERにマッチしなかったログ（想定外）動作確認用
[OUTPUT]
    Name               cloudwatch_logs
    Match              *-firelens-*
    region             ${AWS_REGION}
    #TODO ロググループを変数化
    log_group_name     /ecs/component/unmatched
    log_stream_prefix  ${SERVICE_NAME}-
    auto_create_group  true
    log_key            log
