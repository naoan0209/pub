#	パターン	CodeBuild環境変数（※1）	buildspec.yml	buildspecのif	buildspec複雑度	buildspec詳細	Dockerfile	Dockerfile複雑度	メリット	デメリット
1	マルチステージビルド	ft | svc	同じ	なし	低	マルチステージビルドで差分吸収（※2）	同じ	高	buildspecが1つでよくif文不要でシンプル	Dockrfileが複雑
2	buildspecでif分岐してjsp上書き	ft | svc	同じ	あり	高	ifでftの場合だけjsp上書きコマンドを実行	同じ	低	buildspecが1つでよい、Dockerfileがシンプル	buildspecにif文とjsp上書き処理が必要
3	Dockerfileを別にする	ft | svc	同じ	あり	中	環境変数に応じて別々のDockerfileを呼び出す	別	低	Dockerfileがシンプル	Dockerfileがsvcとftで別管理
4	buildspecを別にする	不要	別	なし	低	パイプラインごとに別のbuildspecを呼び出す	同じ	低	Dockerfileがシンプル、かつ1つでよい	buildspecがsvcとftで別管理

	前提としてパイプラインはftとsvcで別々
	　→　CodeBuildが別々になるため

		※1）軽量な差分のため評価差なし
		※2）docker build --target ${ENV} -t tomcat .
